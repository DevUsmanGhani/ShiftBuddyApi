{"version":3,"sources":["components/utilities/SiteNavbar.jsx","components/public/Landing.jsx","components/public/Login.jsx","components/manager/Dashboard.jsx","components/manager/Employee.jsx","components/manager/Employees.jsx","components/manager/Shifts.jsx","components/manager/EmployeesNew.jsx","App.js","serviceWorker.js","index.js"],"names":["SiteNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","_this2","react_default","a","createElement","Fragment","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","href","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","divider","localStorage","removeItem","history","push","Navbar","color","light","expand","NavbarBrand","getItem","userView","React","Component","withRouter","Landing","Jumbotron","Link","to","Login","email","password","errors","handleChange","handleSubmit","event","defineProperty","target","name","value","preventDefault","axios","post","then","res","auth_token","data","setItem","manager_id","jwt_decode","pathname","catch","err","Container","Row","Col","md","size","offset","Form","FormGroup","Label","for","Input","onChange","type","id","renderErrorMessage","Dashboard","manager","activities","get","concat","console","log","map","activity","key","length","activityLogView","Employee","employee","attributes","username","employeeView","Employees","employees","_this3","handleEmployeeClick","employee_id","_this4","employeesView","Shifts","shifts","shift","employee_name","date","handleShiftClick","shift_id","shiftsView","EmployeesNew","password_confirmation","App","_React$createElement","token","defaults","headers","common","BrowserRouter","utilities_SiteNavbar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","baseURL","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca5c530d.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\nimport { withRouter } from \"react-router\";\n\nclass SiteNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n  guestView() {}\n\n  userView() {\n    return (\n      <>\n        <NavbarToggler onClick={this.toggle} />\n        <Collapse isOpen={this.state.isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/employees/\">Employees</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/shifts/\">Shifts</NavLink>\n            </NavItem>\n            <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Account\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>Settings</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem\n                  onClick={() => {\n                    localStorage.removeItem(\"auth_token\");\n                    this.props.history.push(\"/\");\n                  }}\n                >\n                  Log out\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </Nav>\n        </Collapse>\n      </>\n    );\n  }\n  render() {\n    return (\n      <Navbar color=\"light\" light expand=\"md\" className=\"mb-10\">\n        <NavbarBrand\n          href={localStorage.getItem(\"auth_token\") ? \"/dashboard\" : \"/\"}\n        >\n          Shift Buddy Pro\n        </NavbarBrand>\n        {localStorage.getItem(\"auth_token\") ? this.userView() : \"\"}\n      </Navbar>\n    );\n  }\n}\n\nexport default withRouter(SiteNavbar);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron } from \"reactstrap\";\n\nexport default class Landing extends Component {\n  render() {\n    return (\n      <div>\n        <Jumbotron>\n          <h1 className=\"display-3\">Shift Buddy Pro</h1>\n          <p className=\"lead\">\n            Revolutionizing the way that your business handles shift reports\n          </p>\n          <hr className=\"my-2\" />\n\n          <p className=\"lead\">\n            <button  className=\"basic-button shadow orange\" href=\"/login\">\n              <Link to=\"/login\">Login</Link>\n            </button>\n          </p>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport * as jwt_decode from \"jwt-decode\";\nimport {\n  Container,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Form\n} from \"reactstrap\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { email: \"\", password: \"\", errors: false };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  componentWillMount() {\n    if (localStorage.getItem(\"auth_token\")) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    axios\n      .post(\"/api/v1/managers/authenticate\", this.state)\n      .then(res => {\n        this.setState({ errors: false });\n        const { auth_token } = res.data;\n        localStorage.setItem(\"auth_token\", auth_token);\n        const { manager_id } = jwt_decode(auth_token);\n        localStorage.setItem(\"manager_id\", manager_id);\n        this.props.history.push({ pathname: \"/dashboard\" });\n      })\n      .catch(err => this.setState({ errors: true }));\n  }\n\n  renderErrorMessage() {\n    return (\n      <p className=\"small-error-text\">Invalid Email/Password combination</p>\n    );\n  }\n\n  render() {\n    return (\n      <Container className=\"mt-6\">\n        <Row>\n          <Col md={{ size: 6, offset: 3 }}>\n            <Form className=\"card p-1rem\">\n              <h3 className=\"ml-auto mr-auto\">Manager Login</h3>\n              <FormGroup>\n                <Label for=\"email\">Email</Label>\n                <Input\n                  onChange={this.handleChange}\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"password\">Password</Label>\n                <Input\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                />\n              </FormGroup>\n              {this.state.errors ? this.renderErrorMessage() : \"\"}\n              <button\n                className=\"basic-button shadow blue\"\n                onClick={this.handleSubmit}\n              >\n                Enter\n              </button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Col, Row, Container } from \"reactstrap\";\n\nexport default class Dashboard extends Component {\n  state = {\n    manager: {\n      name: \"\",\n      email: \"\",\n      id: \"\"\n    },\n    activities: [],\n    manager_id: \"\"\n  };\n\n  componentDidMount() {\n    const manager_id = localStorage.getItem(\"manager_id\");\n    axios\n      .get(`/api/v1/managers/${manager_id}`)\n      .then(res => this.setState({ manager: res.data }))\n      .catch(err => console.log(err));\n\n    axios\n      .get(`/api/v1/managers/${manager_id}/activity_logs`)\n      .then(res => this.setState({ activities: res.data }))\n      .catch(err => console.log(err));\n  }\n\n  activityLogView() {\n    return this.state.activities.map(activity => {\n      return <div key={activity} className=\"card p-1rem\">{activity}</div>;\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1 className=\"text-center mb-1rem\">Activity Log </h1>\n        <Row>\n          <Col md={{ size: 8, offset: 2 }}>\n            {this.state.activities.length > 0 ? (\n              this.activityLogView()\n            ) : (\n              <div className=\"text-center\">There are no recent activities</div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Col, Row, Container } from \"reactstrap\";\n\nexport default class Employee extends Component {\n  state = {\n    employee: \"\"\n  };\n\n  componentDidMount() {\n    axios\n      .get(`/api/v1/employees/${localStorage.getItem(\"employee_id\")}`)\n      .then(res => this.setState({ employee: res.data.data }))\n      .catch(err => console.log(err));\n  }\n\n  employeeView() {\n    if (this.state.employee) {\n      return (\n        <Container className=\"mt-6\">\n          <Row>\n            <Col className=\"card\" md={{ size: 6, offset: 3 }}>\n              {this.state.employee.attributes.name} (\n              {this.state.employee.attributes.username})\n            </Col>\n          </Row>\n        </Container>\n      );\n    }\n  }\n\n  render() {\n    console.log(this.state.employee);\n    return <div>{this.employeeView()}</div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Col, Row } from \"reactstrap\";\nimport axios from \"axios\";\n\nexport default class Employees extends Component {\n  state = {\n    employees: []\n  };\n\n  componentWillMount() {\n    axios\n      .get(`/api/v1/managers/${localStorage.getItem(\"manager_id\")}/employees`)\n      .then(res => {\n        this.setState({ employees: res.data });\n      })\n      .catch(err => console.log(err));\n  }\n\n  employeesView() {\n    return this.state.employees.map(employee => {\n      return (\n        <div className=\"list-view-item\" key={employee.id}>\n          {employee.name}\n          <button\n            className=\"float-right basic-button shadow orange\"\n            onClick={() => {\n              this.handleEmployeeClick(employee.id);\n            }}\n          >\n            View\n          </button>\n        </div>\n      );\n    });\n  }\n\n  handleEmployeeClick(employee_id) {\n    localStorage.setItem(\"employee_id\", employee_id);\n    this.props.history.push(\"/employee\");\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1 className=\"text-center\"> Employees <span  onClick={() => this.props.history.push('/employeesnew')} className=\"plus-button\">+</span></h1>\n        <Row>\n          <Col className=\"card\" md={{ size: 8, offset: 2 }}>\n            {this.employeesView()}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Container, Col, Row } from \"reactstrap\";\nimport axios from \"axios\";\n\nexport default class Shifts extends Component {\n  state = {\n    shifts: []\n  };\n\n  componentWillMount() {\n    axios\n      .get(`/api/v1/managers/${localStorage.getItem(\"manager_id\")}/shifts`)\n      .then(res => {\n        this.setState({ shifts: res.data.data });\n      })\n      .catch(err => console.log(err));\n  }\n\n  shiftsView() {\n    return this.state.shifts.map(shift => {\n      console.log(shift);\n      return (\n        <div className=\"flex-1 list-view-item w-35 \">\n          <div className=\"\" key={shift.id}>\n            <div>{shift.attributes.employee_name}</div>\n            <div>{shift.attributes.date}</div>\n          </div>\n\n            <button\n              className=\"float-right basic-button shadow orange\"\n              onClick={() => {\n                this.handleShiftClick(shift.id);\n              }}\n            >\n              View\n            </button>\n        </div>\n      );\n    });\n  }\n\n  handleShiftClick(shift_id) {\n    localStorage.setItem(\"shift_id\", shift_id);\n    this.props.history.push(\"/shift\");\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1 className=\"text-center\"> Shifts</h1>\n        <Row>\n          <Col className=\"card\" md={{ size: 8, offset: 2 }}>\n            {this.shiftsView()}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport * as jwt_decode from \"jwt-decode\";\nimport {\n  Container,\n  Row,\n  Col,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Form\n} from \"reactstrap\";\n\nexport default class EmployeesNew extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      password: \"\",\n      password_confirmation: \"\",\n      username: \"\",\n      manager_id: localStorage.getItem(\"manager_id\"),\n      errors: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    axios\n      .post(\n        `/api/v1/managers/${localStorage.getItem(\"manager_id\")}/employees`,\n        { employee: this.state }\n      )\n      .then(res => {\n        this.props.history.push(\"/employees\");\n      })\n      .catch(err => this.setState({ errors: true }));\n  }\n\n  renderErrorMessage() {\n    return <p className=\"small-error-text\">Error</p>;\n  }\n\n  render() {\n    return (\n      <Container className=\"mt-6\">\n        <Row>\n          <Col md={{ size: 6, offset: 3 }}>\n            <Form className=\"card p-1rem\">\n              <h3 className=\"ml-auto mr-auto\">New Employee</h3>\n              <FormGroup>\n                <Label for=\"name\">Name</Label>\n                <Input onChange={this.handleChange} type=\"text\" name=\"name\" />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"username\">Username</Label>\n                <Input\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"username\"\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"password\">Password</Label>\n                <Input\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  name=\"password\"\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"password_confirmation\">Password Confirmation</Label>\n                <Input\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  name=\"password_confirmation\"\n                />\n              </FormGroup>\n              {this.state.errors ? this.renderErrorMessage() : \"\"}\n              <button\n                className=\"basic-button shadow blue\"\n                onClick={this.handleSubmit}\n              >\n                Create\n              </button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SiteNavbar from \"./components/utilities/SiteNavbar\";\nimport Landing from \"./components/public/Landing\";\nimport Login from \"./components/public/Login\";\nimport Dashboard from \"./components/manager/Dashboard\";\nimport Employee from \"./components/manager/Employee\";\nimport Employees from \"./components/manager/Employees\";\nimport Shifts from \"./components/manager/Shifts\";\nimport EmployeesNew from \"./components/manager/EmployeesNew\";\n\nimport axios from \"axios\";\n\nclass App extends Component {\n  render() {\n    (function() {\n      const token = localStorage.getItem(\"auth_token\");\n      if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n      } else {\n        axios.defaults.headers.common[\"Authorization\"] = null;\n        /*if setting null does not remove `Authorization` header then try\n          delete axios.defaults.headers.common['Authorization'];\n        */\n      }\n    })();\n    return (\n      <div className=\"app\">\n        <Router>\n          <div>\n            <SiteNavbar />\n            <Switch>\n              <Route exact path=\"/\" exact component={Landing} />\n            </Switch>\n            <Switch>\n              <Route exact path=\"/dashboard/\" component={Dashboard} />\n            </Switch>\n            <Route exact path=\"/login/\" component={Login} />\n            <Switch>\n              <Route exact path=\"/shifts/\" component={Shifts} />\n            </Switch>\n            <Switch>\n              <Route exact path=\"/employee/\" component={Employee} />\n            </Switch>\n            <Route exact path=\"/employees/\" component={Employees} />\n            <Switch />\n            <Route exact path=\"/employeesnew/\" component={EmployeesNew} />\n            <Switch />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Column, Container, Row } from \"reactstrap\";\n\naxios.defaults.baseURL = \"http://www.shiftbuddypro.com\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}